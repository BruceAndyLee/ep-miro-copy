openapi: 3.0.0
info:
  title: Miro-copy API
  description: Contract for the miro board copy
  version: 0.0.1
paths:
  /auth/login:
    post:
      summary: Provide credentials and get a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsRequestBody'
      responses:
        '200':
          description: Authorization successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /auth/register:
    post:
      summary: Provide credentials and get a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsRequestBody'
      responses:
        '201':
          description: Authorization successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
  /boards:
    get:
      summary: All boards
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of all boards
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Board'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      summary: Create a board
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Board created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /boards/{id}:
    delete:
      summary: Delete a board
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Board deleted successfully
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CredentialsRequestBody:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
          format: password
    User:
      type: object
      required:
        - id
        - username
      properties:
        id:
          type: string
        username:
          type: string
    AuthorizedResponse:
      type: object
      required:
        - accessToken
        - user
      properties:
        accessToken:
          type: string
        user:
          $ref: '#/components/schemas/User'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        message:
          type: string
        code:
          type: string
    Board:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
  responses:
    BadRequestError:
      description: Bad data provided
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFoundError:
      description: Resourse not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
